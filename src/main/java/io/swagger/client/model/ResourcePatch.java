/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Model description
 */
@ApiModel(description = "Model description")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-04T14:36:36.360Z")
public class ResourcePatch   {
  /**
   * Gets or Sets op
   */
  public enum OpEnum {
    @SerializedName("Dec")
    DEC("Dec"),
    
    @SerializedName("Inc")
    INC("Inc"),
    
    @SerializedName("Nothing")
    NOTHING("Nothing");

    private String value;

    OpEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("op")
  private OpEnum op = null;

  @SerializedName("value")
  private Long value = null;

  @SerializedName("patchWhatIsPossible")
  private Boolean patchWhatIsPossible = null;

  public ResourcePatch op(OpEnum op) {
    this.op = op;
    return this;
  }

   /**
   * Get op
   * @return op
  **/
  @ApiModelProperty(example = "null", value = "")
  public OpEnum getOp() {
    return op;
  }

  public void setOp(OpEnum op) {
    this.op = op;
  }

  public ResourcePatch value(Long value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getValue() {
    return value;
  }

  public void setValue(Long value) {
    this.value = value;
  }

  public ResourcePatch patchWhatIsPossible(Boolean patchWhatIsPossible) {
    this.patchWhatIsPossible = patchWhatIsPossible;
    return this;
  }

   /**
   * Get patchWhatIsPossible
   * @return patchWhatIsPossible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPatchWhatIsPossible() {
    return patchWhatIsPossible;
  }

  public void setPatchWhatIsPossible(Boolean patchWhatIsPossible) {
    this.patchWhatIsPossible = patchWhatIsPossible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourcePatch resourcePatch = (ResourcePatch) o;
    return Objects.equals(this.op, resourcePatch.op) &&
        Objects.equals(this.value, resourcePatch.value) &&
        Objects.equals(this.patchWhatIsPossible, resourcePatch.patchWhatIsPossible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(op, value, patchWhatIsPossible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourcePatch {\n");
    
    sb.append("    op: ").append(toIndentedString(op)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    patchWhatIsPossible: ").append(toIndentedString(patchWhatIsPossible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

