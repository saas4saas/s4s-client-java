/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Model description
 */
@ApiModel(description = "Model description")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-04T14:36:36.360Z")
public class StripeAccessCode   {
  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("stripe_publishable_key")
  private String stripePublishableKey = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("refresh_token")
  private String refreshToken = null;

  @SerializedName("token_type")
  private String tokenType = null;

  @SerializedName("stripe_user_id")
  private String stripeUserId = null;

  @SerializedName("livemode")
  private Boolean livemode = null;

  public StripeAccessCode accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public StripeAccessCode stripePublishableKey(String stripePublishableKey) {
    this.stripePublishableKey = stripePublishableKey;
    return this;
  }

   /**
   * Get stripePublishableKey
   * @return stripePublishableKey
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStripePublishableKey() {
    return stripePublishableKey;
  }

  public void setStripePublishableKey(String stripePublishableKey) {
    this.stripePublishableKey = stripePublishableKey;
  }

  public StripeAccessCode scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public StripeAccessCode refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public StripeAccessCode tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Get tokenType
   * @return tokenType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public StripeAccessCode stripeUserId(String stripeUserId) {
    this.stripeUserId = stripeUserId;
    return this;
  }

   /**
   * Get stripeUserId
   * @return stripeUserId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStripeUserId() {
    return stripeUserId;
  }

  public void setStripeUserId(String stripeUserId) {
    this.stripeUserId = stripeUserId;
  }

  public StripeAccessCode livemode(Boolean livemode) {
    this.livemode = livemode;
    return this;
  }

   /**
   * Get livemode
   * @return livemode
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getLivemode() {
    return livemode;
  }

  public void setLivemode(Boolean livemode) {
    this.livemode = livemode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StripeAccessCode stripeAccessCode = (StripeAccessCode) o;
    return Objects.equals(this.accessToken, stripeAccessCode.accessToken) &&
        Objects.equals(this.stripePublishableKey, stripeAccessCode.stripePublishableKey) &&
        Objects.equals(this.scope, stripeAccessCode.scope) &&
        Objects.equals(this.refreshToken, stripeAccessCode.refreshToken) &&
        Objects.equals(this.tokenType, stripeAccessCode.tokenType) &&
        Objects.equals(this.stripeUserId, stripeAccessCode.stripeUserId) &&
        Objects.equals(this.livemode, stripeAccessCode.livemode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, stripePublishableKey, scope, refreshToken, tokenType, stripeUserId, livemode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StripeAccessCode {\n");
    
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    stripePublishableKey: ").append(toIndentedString(stripePublishableKey)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    stripeUserId: ").append(toIndentedString(stripeUserId)).append("\n");
    sb.append("    livemode: ").append(toIndentedString(livemode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

