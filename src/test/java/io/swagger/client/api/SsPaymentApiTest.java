/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.S4sError;
import io.swagger.client.model.PaymentConf;
import io.swagger.client.model.CustomerInfo;
import io.swagger.client.model.StripeCustomer;
import io.swagger.client.model.PaymentRequest;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SsPaymentApi
 */
public class SsPaymentApiTest {

    private final SsPaymentApi api = new SsPaymentApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void confTest() throws ApiException {
        // PaymentConf response = api.conf();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerInfoCurrencyTest() throws ApiException {
        String customerId = null;
        String currency = null;
        // String response = api.customerInfoCurrency(customerId, currency);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerInfoGetTest() throws ApiException {
        String customerId = null;
        // CustomerInfo response = api.customerInfoGet(customerId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerInfoHasPaymentInfoTest() throws ApiException {
        String customerId = null;
        // Boolean response = api.customerInfoHasPaymentInfo(customerId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerInfoStripeCustomerTest() throws ApiException {
        String customerId = null;
        StripeCustomer stripeCustomer = null;
        // String response = api.customerInfoStripeCustomer(customerId, stripeCustomer);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerPaymentAddTest() throws ApiException {
        String customerId = null;
        PaymentRequest paymentRequest = null;
        // PaymentRequest response = api.customerPaymentAdd(customerId, paymentRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerPaymentCancelPatchTest() throws ApiException {
        String customerId = null;
        String paymentId = null;
        // String response = api.customerPaymentCancelPatch(customerId, paymentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerPaymentGetTest() throws ApiException {
        String customerId = null;
        String paymentId = null;
        // PaymentRequest response = api.customerPaymentGet(customerId, paymentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerPaymentPayPatchTest() throws ApiException {
        String customerId = null;
        String paymentId = null;
        // PaymentRequest response = api.customerPaymentPayPatch(customerId, paymentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerPaymentValuesTest() throws ApiException {
        String customerId = null;
        Integer page = null;
        Integer numberPerPage = null;
        // api.customerPaymentValues(customerId, page, numberPerPage);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentConfigGetTest() throws ApiException {
        // PaymentConf response = api.paymentConfigGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentConfigPutTest() throws ApiException {
        PaymentConf a = null;
        // String response = api.paymentConfigPut(a);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentGetAllTest() throws ApiException {
        Integer page = null;
        Integer numberPerPage = null;
        // api.paymentGetAll(page, numberPerPage);

        // TODO: test validations
    }
    
}
