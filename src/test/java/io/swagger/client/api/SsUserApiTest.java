/**
 * s4s-full
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Account;
import io.swagger.client.model.S4sError;
import io.swagger.client.model.Session;
import io.swagger.client.model.EmailRecover;
import io.swagger.client.model.UserApi;
import io.swagger.client.model.User;
import io.swagger.client.model.Login;
import io.swagger.client.model.UtUser;
import io.swagger.client.model.UserConfig;
import io.swagger.client.model.GoogleAuth;
import io.swagger.client.model.UserUiConf;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SsUserApi
 */
public class SsUserApiTest {

    private final SsUserApi api = new SsUserApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountAddTest() throws ApiException {
        Account newAccount = null;
        // Account response = api.accountAdd(newAccount);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountAutoLoginTest() throws ApiException {
        String rememberMeToken = null;
        // Session response = api.accountAutoLogin(rememberMeToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountChangePasswordPatchTest() throws ApiException {
        String changePwdToken = null;
        EmailRecover recover = null;
        // String response = api.accountChangePasswordPatch(changePwdToken, recover);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountGetAllTest() throws ApiException {
        Integer page = null;
        Integer numberPerPage = null;
        Boolean loadDefaultUser = null;
        // api.accountGetAll(page, numberPerPage, loadDefaultUser);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdGetTest() throws ApiException {
        String accountId = null;
        // Account response = api.accountIdGet(accountId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdKeysAddTest() throws ApiException {
        String accountId = null;
        // UserApi response = api.accountIdKeysAdd(accountId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdKeysDelTest() throws ApiException {
        String accountId = null;
        String userId = null;
        // String response = api.accountIdKeysDel(accountId, userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdKeysGetAllTest() throws ApiException {
        String accountId = null;
        Integer page = null;
        Integer numberPerPage = null;
        // api.accountIdKeysGetAll(accountId, page, numberPerPage);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdPrivateDataPutTest() throws ApiException {
        String accountId = null;
        Object privateData = null;
        // String response = api.accountIdPrivateDataPut(accountId, privateData);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdPutTest() throws ApiException {
        String accountId = null;
        Account newAccount = null;
        // Account response = api.accountIdPut(accountId, newAccount);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdStatusPutTest() throws ApiException {
        String accountId = null;
        String status = null;
        // String response = api.accountIdStatusPut(accountId, status);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserAddTest() throws ApiException {
        String accountId = null;
        User user = null;
        // User response = api.accountIdUserAdd(accountId, user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserChangePwdTokenTest() throws ApiException {
        String accountId = null;
        String userId = null;
        String currentPwd = null;
        // String response = api.accountIdUserChangePwdToken(accountId, userId, currentPwd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserGetTest() throws ApiException {
        String accountId = null;
        String userId = null;
        // User response = api.accountIdUserGet(accountId, userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserLoginTest() throws ApiException {
        String accountId = null;
        String userId = null;
        // Session response = api.accountIdUserLogin(accountId, userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserPutTest() throws ApiException {
        String accountId = null;
        String userId = null;
        User user = null;
        // User response = api.accountIdUserPut(accountId, userId, user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIdUserResendEmailConfirmationTest() throws ApiException {
        String accountId = null;
        String userId = null;
        // String response = api.accountIdUserResendEmailConfirmation(accountId, userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountLoginTest() throws ApiException {
        Login login = null;
        // Session response = api.accountLogin(login);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountLoginOrAddTest() throws ApiException {
        Account account = null;
        // Session response = api.accountLoginOrAdd(account);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountRecoverTest() throws ApiException {
        EmailRecover recover = null;
        // String response = api.accountRecover(recover);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUserChangePwdTokenTest() throws ApiException {
        String userId = null;
        String currentPwd = null;
        // String response = api.accountUserChangePwdToken(userId, currentPwd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUserGetTest() throws ApiException {
        String userId = null;
        // User response = api.accountUserGet(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUserLoginTest() throws ApiException {
        String userId = null;
        // Session response = api.accountUserLogin(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUserPutTest() throws ApiException {
        String userId = null;
        User user = null;
        // User response = api.accountUserPut(userId, user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUserResendEmailConfirmationTest() throws ApiException {
        String userId = null;
        // String response = api.accountUserResendEmailConfirmation(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUsernameChangePwdTokenTest() throws ApiException {
        String usr = null;
        String currentPwd = null;
        // String response = api.accountUsernameChangePwdToken(usr, currentPwd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUsernameGetTest() throws ApiException {
        String usr = null;
        // User response = api.accountUsernameGet(usr);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUsernameLoginTest() throws ApiException {
        String usr = null;
        // Session response = api.accountUsernameLogin(usr);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUsernamePutTest() throws ApiException {
        String usr = null;
        User user = null;
        // User response = api.accountUsernamePut(usr, user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUsernameResendEmailConfirmationTest() throws ApiException {
        String usr = null;
        // String response = api.accountUsernameResendEmailConfirmation(usr);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authenticateTest() throws ApiException {
        String authtoken = null;
        // UtUser response = api.authenticate(authtoken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTest() throws ApiException {
        // UserConfig response = api.config();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void googleLoginTest() throws ApiException {
        GoogleAuth google = null;
        // Session response = api.googleLogin(google);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void htmlConfTest() throws ApiException {
        // UserUiConf response = api.htmlConf();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountGetTest() throws ApiException {
        // Account response = api.selfAccountGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountKeysAddTest() throws ApiException {
        // UserApi response = api.selfAccountKeysAdd();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountKeysDelTest() throws ApiException {
        String userId = null;
        // String response = api.selfAccountKeysDel(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountKeysGetAllTest() throws ApiException {
        Integer page = null;
        Integer numberPerPage = null;
        // api.selfAccountKeysGetAll(page, numberPerPage);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountPrivateDataPutTest() throws ApiException {
        Object privateData = null;
        // String response = api.selfAccountPrivateDataPut(privateData);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountPutTest() throws ApiException {
        Account newAccount = null;
        // Account response = api.selfAccountPut(newAccount);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountStatusPutTest() throws ApiException {
        String status = null;
        // String response = api.selfAccountStatusPut(status);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserAddTest() throws ApiException {
        User user = null;
        // User response = api.selfAccountUserAdd(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserChangePwdTokenTest() throws ApiException {
        String userId = null;
        String currentPwd = null;
        // String response = api.selfAccountUserChangePwdToken(userId, currentPwd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserGetTest() throws ApiException {
        String userId = null;
        // User response = api.selfAccountUserGet(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserLoginTest() throws ApiException {
        String userId = null;
        // Session response = api.selfAccountUserLogin(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserPutTest() throws ApiException {
        String userId = null;
        User user = null;
        // User response = api.selfAccountUserPut(userId, user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfAccountUserResendEmailConfirmationTest() throws ApiException {
        String userId = null;
        // String response = api.selfAccountUserResendEmailConfirmation(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfUserChangePwdTokenTest() throws ApiException {
        String currentPwd = null;
        // String response = api.selfUserChangePwdToken(currentPwd);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfUserGetTest() throws ApiException {
        // User response = api.selfUserGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfUserLoginTest() throws ApiException {
        // Session response = api.selfUserLogin();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfUserPutTest() throws ApiException {
        User user = null;
        // User response = api.selfUserPut(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selfUserResendEmailConfirmationTest() throws ApiException {
        // String response = api.selfUserResendEmailConfirmation();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userConfigGetTest() throws ApiException {
        // UserConfig response = api.userConfigGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userConfigPutTest() throws ApiException {
        UserConfig a = null;
        // String response = api.userConfigPut(a);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUiConfigGetTest() throws ApiException {
        // UserUiConf response = api.userUiConfigGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUiConfigPutTest() throws ApiException {
        UserUiConf a = null;
        // String response = api.userUiConfigPut(a);

        // TODO: test validations
    }
    
}
